import Divider from '@/components/Divider';
import { Card, Button, Badge } from '@musetrip360/ui-core';
import { BookOpenIcon, CameraIcon, UploadIcon, ApertureIcon } from 'lucide-react';
import { Link } from 'react-router';

const TourCreationGuidePage = () => {
  const equipmentList = [
    {
      name: 'Camera 360¬∞',
      examples: 'Insta360, GoPro Max, Ricoh Theta',
      icon: <CameraIcon className="w-5 h-5" />,
      required: true,
    },
    {
      name: 'G·∫≠y Camera 360¬∞',
      examples: 'G·∫≠y g·∫Øn ·ªïn ƒë·ªãnh ƒë·ªÉ gi·∫£m thi·ªÉu rung l·∫Øc',
      icon: <ApertureIcon className="w-5 h-5" />,
      required: true,
    },
    {
      name: 'Thi·∫øt B·ªã D·ª± Ph√≤ng',
      examples: 'Th·∫ª nh·ªõ ph·ª•, pin d·ª± ph√≤ng',
      icon: <ApertureIcon className="w-5 h-5" />,
      required: false,
    },
  ];

  const implementationSteps = [
    {
      title: 'L·∫Øp ƒê·∫∑t Thi·∫øt B·ªã',
      description: 'Thi·∫øt l·∫≠p camera 360¬∞ v√† thi·∫øt b·ªã g·∫Øn k·∫øt c·ªßa b·∫°n',
      steps: [
        'G·∫Øn camera 360¬∞ l√™n ƒë·∫ßu g·∫≠y camera 360¬∞',
        'ƒê·∫£m b·∫£o camera c√¢n b·∫±ng v√† ·ªïn ƒë·ªãnh, kh√¥ng b·ªã nghi√™ng',
        'ƒêi·ªÅu ch·ªânh chi·ªÅu cao g·∫≠y theo kh√¥ng gian c·∫ßn quay',
      ],
    },
    {
      title: 'Ch·ª•p To√†n C·∫£nh',
      description: 'Ghi l·∫°i to√†n b·ªô m√¥i tr∆∞·ªùng 360¬∞',
      steps: [
        'B·∫≠t camera 360¬∞ v√† ch·ªçn ch·∫ø ƒë·ªô ch·ª•p ·∫£nh ho·∫∑c quay video to√†n c·∫£nh',
        'ƒê·∫∑t g·∫≠y ·ªü trung t√¢m c·ªßa kh√¥ng gian',
        'Ch·ª•p/quay trong v√†i gi√¢y ƒë·ªÉ ghi l·∫°i to√†n b·ªô g√≥c nh√¨n 360¬∞',
      ],
    },
    {
      title: 'Xu·∫•t D·ªØ Li·ªáu Camera',
      description: 'X·ª≠ l√Ω v√† chu·∫©n b·ªã n·ªôi dung 360¬∞ c·ªßa b·∫°n',
      steps: [
        'K·∫øt n·ªëi camera v·ªõi ƒëi·ªán tho·∫°i ho·∫∑c m√°y t√≠nh',
        'T·∫£i xu·ªëng d·ªØ li·ªáu (·∫£nh ho·∫∑c video 360¬∞)',
        'H·ªá th·ªëng s·∫Ω t·∫°o ra s√°u t·ªáp h√¨nh ·∫£nh t∆∞∆°ng ·ª©ng: Tr∆∞·ªõc, Sau, Tr√°i, Ph·∫£i, Tr√™n, D∆∞·ªõi',
      ],
    },
    {
      title: 'T·∫£i L√™n N·ªÅn T·∫£ng',
      description: 'S·ª≠ d·ª•ng n·ªÅn t·∫£ng MuseTrip360 ƒë·ªÉ t·∫°o tour ·∫£o c·ªßa b·∫°n',
      steps: [
        'Truy c·∫≠p trang ch·ªß MuseTrip360',
        'ƒêƒÉng nh·∫≠p b·∫±ng t√†i kho·∫£n c√≥ quy·ªÅn truy c·∫≠p',
        'V√†o "Qu·∫£n l√Ω tour ·∫£o"',
        'Ch·ªçn "T·∫°o tour ·∫£o m·ªõi"',
        'Kh·ªüi t·∫°o th√¥ng tin tour ·∫£o',
        'T·∫°o c·∫£nh 360¬∞ trong tour ·∫£o',
        'T·∫£i l√™n t·∫•t c·∫£ s√°u m·∫∑t t∆∞∆°ng ·ª©ng c·ªßa c·∫£nh',
        'Nh·∫•p "Upload Cubemap" ƒë·ªÉ t·∫£i l√™n v√† xem c·∫£nh 360¬∞',
        'K·∫øt n·ªëi v·ªõi c√°c c·∫£nh kh√°c ƒë·ªÉ t·∫°o th√†nh m·ªôt tour ·∫£o ho√†n ch·ªânh',
      ],
    },
  ];

  const cubemapFaces = [
    { name: 'Tr∆∞·ªõc', english: 'Front', color: 'bg-blue-100 text-blue-800' },
    { name: 'Sau', english: 'Back', color: 'bg-green-100 text-green-800' },
    { name: 'Tr√°i', english: 'Left', color: 'bg-purple-100 text-purple-800' },
    { name: 'Ph·∫£i', english: 'Right', color: 'bg-orange-100 text-orange-800' },
    { name: 'Tr√™n', english: 'Top', color: 'bg-red-100 text-red-800' },
    { name: 'D∆∞·ªõi', english: 'Bottom', color: 'bg-yellow-100 text-yellow-800' },
  ];

  return (
    <div className="max-w-6xl mx-auto px-8 py-6">
      {/* Header Section */}
      <div className="flex items-center justify-between mb-6">
        <div className="flex items-center gap-3">
          <BookOpenIcon className="w-8 h-8 text-blue-600" />
          <div>
            <h1 className="text-3xl font-bold text-gray-900">H∆∞·ªõng D·∫´n T·∫°o Tour ·∫¢o 360¬∞</h1>
            <p className="text-gray-600 mt-1">H∆∞·ªõng d·∫´n t·∫°o Tour ·∫¢o tr√™n MuseTrip360</p>
          </div>
        </div>
        <Button className="flex items-center gap-2">
          <UploadIcon className="w-4 h-4" />
          T·∫°o Tour M·ªõi
        </Button>
      </div>

      <Divider />

      {/* Introduction Section */}
      <div className="my-8">
        <Card className="p-6 bg-blue-50 border-blue-200">
          <h2 className="text-xl font-semibold text-blue-900 mb-3">üìò Gi·ªõi thi·ªáu</h2>
          <p className="text-blue-800 leading-relaxed">
            T√≠nh nƒÉng n√†y cho ph√©p ng∆∞·ªùi d√πng <strong>t·∫£i l√™n s√°u h√¨nh ·∫£nh t∆∞∆°ng ·ª©ng v·ªõi s√°u m·∫∑t</strong>: Tr∆∞·ªõc, Sau,
            Tr√°i, Ph·∫£i, Tr√™n v√† D∆∞·ªõi, ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ t·∫°o c·∫£nh 3D, tour ·∫£o ho·∫∑c l∆∞u tr·ªØ d·ªØ li·ªáu kh√¥ng gian.
          </p>
        </Card>
      </div>

      {/* Equipment Preparation */}
      <div className="my-8">
        <h2 className="text-2xl font-bold text-gray-900 mb-4">üõ†Ô∏è Chu·∫©n b·ªã thi·∫øt b·ªã (Equipment Preparation)</h2>
        <p className="text-gray-600 mb-6">B·∫£o t√†ng c√≥ th·ªÉ t·ª± chu·∫©n b·ªã ho·∫∑c s·ª≠ d·ª•ng d·ªãch v·ª• b√™n ngo√†i</p>

        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
          {equipmentList.map((item, index) => (
            <Card key={index} className="p-4">
              <div className="flex items-start gap-3">
                <div className="p-2 bg-gray-100 rounded-lg">{item.icon}</div>
                <div className="flex-1">
                  <div className="flex items-center gap-2 mb-1">
                    <h3 className="font-semibold text-gray-900">{item.name}</h3>
                    {item.required && (
                      <Badge variant="destructive" className="text-xs">
                        B·∫Øt bu·ªôc
                      </Badge>
                    )}
                  </div>
                  <p className="text-sm text-gray-600">{item.examples}</p>
                </div>
              </div>
            </Card>
          ))}
        </div>

        <Card className="mt-6 p-4 bg-amber-50 border-amber-200">
          <p className="text-amber-800">
            <strong>üí° M·∫πo:</strong> G·∫≠y Camera 360¬∞, khi k·∫øt h·ª£p v·ªõi camera/thi·∫øt b·ªã 360¬∞, cho ph√©p ng∆∞·ªùi d√πng{' '}
            <strong>ghi l·∫°i to√†n b·ªô g√≥c nh√¨n to√†n c·∫£nh trong m·ªôt l·∫ßn ch·ª•p</strong>. Sau khi ghi, h√¨nh ·∫£nh c√≥ th·ªÉ ƒë∆∞·ª£c
            chia th√†nh s√°u m·∫∑t ƒë·ªÉ ƒë√°p ·ª©ng y√™u c·∫ßu s·ª≠ d·ª•ng.
          </p>
        </Card>
      </div>

      {/* Cubemap Faces Info */}
      <div className="my-8">
        <h2 className="text-2xl font-bold text-gray-900 mb-4">üéØ S√°u M·∫∑t Cubemap</h2>
        <p className="text-gray-600 mb-4">H·ªá th·ªëng s·∫Ω t·∫°o ra s√°u t·ªáp h√¨nh ·∫£nh t∆∞∆°ng ·ª©ng n√†y:</p>
        <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-3">
          {cubemapFaces.map((face, index) => (
            <div key={index} className="text-center">
              <Badge className={`w-full py-2 ${face.color}`}>{face.name}</Badge>
              <p className="text-xs text-gray-500 mt-1">({face.english})</p>
            </div>
          ))}
        </div>
      </div>

      {/* Implementation Steps */}
      <div className="my-8">
        <h2 className="text-2xl font-bold text-gray-900 mb-6">üöÄ C√°c b∆∞·ªõc th·ª±c hi·ªán (Implementation Steps)</h2>

        <div className="space-y-6">
          {implementationSteps.map((section, index) => (
            <Card key={index} className="p-6">
              <div className="flex items-start gap-4">
                <div className="flex-shrink-0 w-8 h-8 bg-blue-600 text-white rounded-full flex items-center justify-center font-bold">
                  {index + 1}
                </div>
                <div className="flex-1">
                  <h3 className="text-xl font-semibold text-gray-900 mb-2">{section.title}</h3>
                  <p className="text-gray-600 mb-4">{section.description}</p>

                  <div className="space-y-2">
                    {section.steps.map((step, stepIndex) => (
                      <div key={stepIndex} className="flex items-start gap-3">
                        <div className="w-2 h-2 bg-blue-400 rounded-full mt-2 flex-shrink-0" />
                        <p className="text-gray-700">{step}</p>
                      </div>
                    ))}
                  </div>
                </div>
              </div>
            </Card>
          ))}
        </div>
      </div>

      {/* Call to Action */}
      <div className="my-8 text-center">
        <Card className="p-8 bg-gradient-to-r from-blue-50 to-purple-50 border-blue-200">
          <h2 className="text-2xl font-bold text-gray-900 mb-4">S·∫µn s√†ng t·∫°o Tour ·∫¢o c·ªßa b·∫°n?</h2>
          <p className="text-gray-600 mb-6">L√†m theo c√°c b∆∞·ªõc tr√™n ƒë·ªÉ t·∫°o tour ·∫£o 360¬∞ h·∫•p d·∫´n cho b·∫£o t√†ng c·ªßa b·∫°n</p>
          <div className="flex gap-4 justify-center">
            <Link to="/virtual-tour/studio/create">
              <Button className="flex items-center gap-2">
                <UploadIcon className="w-4 h-4" />
                B·∫Øt ƒë·∫ßu t·∫°o tour
              </Button>
            </Link>
            <a
              href="https://res.cloudinary.com/dbmjyj2oy/raw/upload/v1756735761/crvuqo3x8nuuvmfq7ves.pdf"
              target="_blank"
              rel="noopener noreferrer"
            >
              <Button variant="outline" className="flex items-center gap-2">
                <BookOpenIcon className="w-4 h-4" />
                Xem th√™m h∆∞·ªõng d·∫´n
              </Button>
            </a>
          </div>
        </Card>
      </div>
    </div>
  );
};

export default TourCreationGuidePage;
