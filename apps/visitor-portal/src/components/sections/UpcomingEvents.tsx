'use client';

import { Card, CardContent } from '@musetrip360/ui-core/card';
import { Badge } from '@musetrip360/ui-core/badge';
import { Button } from '@musetrip360/ui-core/button';
import { Progress } from '@musetrip360/ui-core/progress';
import { Calendar, MapPin, Users, Clock, ArrowRight, Star, Eye, Headset, Monitor, Wifi, Zap } from 'lucide-react';
import { useStaggeredAnimation } from '@/hooks/useScrollAnimation';

const events = [
  {
    id: 1,
    title: 'Tri·ªÉn l√£m "Leonardo da Vinci: Thi√™n t√†i Ph·ª•c h∆∞ng"',
    description: 'Kh√°m ph√° cu·ªôc ƒë·ªùi v√† t√°c ph·∫©m c·ªßa Leonardo da Vinci qua c√¥ng ngh·ªá th·ª±c t·∫ø ·∫£o ti√™n ti·∫øn',
    museum: 'B·∫£o t√†ng Louvre',
    location: 'Paris, Ph√°p',
    date: '2024-02-15',
    time: '19:00 - 21:00',
    type: 'online',
    category: 'Tri·ªÉn l√£m',
    price: 'Mi·ªÖn ph√≠',
    capacity: { current: 850, max: 1000 },
    rating: 4.8,
    image: 'bg-gradient-to-br from-blue-500 to-purple-600',
    speaker: 'Dr. Marie Dubois',
    highlights: ['Th·ª±c t·∫ø ·∫£o', 'Q&A tr·ª±c ti·∫øp', 'T√†i li·ªáu ƒë·ªôc quy·ªÅn'],
    featured: true,
  },
  {
    id: 2,
    title: 'Workshop: "Kh·∫£o c·ªï h·ªçc hi·ªán ƒë·∫°i"',
    description: 'T√¨m hi·ªÉu c√°c ph∆∞∆°ng ph√°p kh·∫£o c·ªï h·ªçc hi·ªán ƒë·∫°i v√† c√¥ng ngh·ªá trong nghi√™n c·ª©u l·ªãch s·ª≠',
    museum: 'B·∫£o t√†ng L·ªãch s·ª≠ Vi·ªát Nam',
    location: 'H√† N·ªôi, Vi·ªát Nam',
    date: '2024-02-18',
    time: '14:00 - 17:00',
    type: 'offline',
    category: 'Workshop',
    price: '200,000ƒë',
    capacity: { current: 45, max: 50 },
    rating: 4.9,
    image: 'bg-gradient-to-br from-amber-500 to-orange-600',
    speaker: 'GS. Nguy·ªÖn VƒÉn Minh',
    highlights: ['Th·ª±c h√†nh tr·ª±c ti·∫øp', 'C√¥ng c·ª• chuy√™n nghi·ªáp', 'Ch·ª©ng ch·ªâ'],
    featured: false,
  },
  {
    id: 3,
    title: 'H·ªôi th·∫£o: "C√¥ng ngh·ªá VR trong B·∫£o t√†ng"',
    description: 'Th·∫£o lu·∫≠n v·ªÅ ·ª©ng d·ª•ng c√¥ng ngh·ªá th·ª±c t·∫ø ·∫£o trong vi·ªác tr∆∞ng b√†y v√† b·∫£o t·ªìn di s·∫£n',
    museum: 'B·∫£o t√†ng Khoa h·ªçc London',
    location: 'London, Anh',
    date: '2024-02-20',
    time: '10:00 - 12:00',
    type: 'hybrid',
    category: 'H·ªôi th·∫£o',
    price: '150,000ƒë',
    capacity: { current: 280, max: 300 },
    rating: 4.7,
    image: 'bg-gradient-to-br from-green-500 to-teal-600',
    speaker: 'Prof. James Mitchell',
    highlights: ['C√¥ng ngh·ªá m·ªõi nh·∫•t', 'Demo tr·ª±c ti·∫øp', 'Networking'],
    featured: false,
  },
  {
    id: 4,
    title: 'Tour ·∫£o: "Ai C·∫≠p c·ªï ƒë·∫°i"',
    description: 'H√†nh tr√¨nh kh√°m ph√° c√°c kim t·ª± th√°p v√† lƒÉng m·ªô Ai C·∫≠p c·ªï ƒë·∫°i v·ªõi c√¥ng ngh·ªá 360¬∞',
    museum: 'B·∫£o t√†ng Ai C·∫≠p',
    location: 'Cairo, Ai C·∫≠p',
    date: '2024-02-22',
    time: '20:00 - 21:30',
    type: 'vr',
    category: 'Tour ·∫£o',
    price: '100,000ƒë',
    capacity: { current: 1500, max: 2000 },
    rating: 4.9,
    image: 'bg-gradient-to-br from-yellow-500 to-red-600',
    speaker: 'Dr. Ahmed Hassan',
    highlights: ['VR 360¬∞', '√Çm thanh 3D', 'T∆∞∆°ng t√°c th·ªùi gian th·ª±c'],
    featured: false,
  },
  {
    id: 5,
    title: 'Masterclass: "Nhi·∫øp ·∫£nh Di s·∫£n"',
    description: 'H·ªçc c√°ch ch·ª•p ·∫£nh c√°c di t√≠ch l·ªãch s·ª≠ v√† hi·ªán v·∫≠t b·∫£o t√†ng m·ªôt c√°ch chuy√™n nghi·ªáp',
    museum: 'Metropolitan Museum',
    location: 'New York, M·ªπ',
    date: '2024-02-25',
    time: '16:00 - 18:00',
    type: 'online',
    category: 'Masterclass',
    price: '300,000ƒë',
    capacity: { current: 120, max: 150 },
    rating: 4.8,
    image: 'bg-gradient-to-br from-purple-500 to-pink-600',
    speaker: 'Sarah Williams',
    highlights: ['K·ªπ thu·∫≠t chuy√™n nghi·ªáp', 'Editing tips', 'Portfolio review'],
    featured: false,
  },
  {
    id: 6,
    title: 'S·ª± ki·ªán gia ƒë√¨nh: "Khoa h·ªçc vui"',
    description: 'Ho·∫°t ƒë·ªông khoa h·ªçc th√∫ v·ªã d√†nh cho gia ƒë√¨nh v·ªõi c√°c th√≠ nghi·ªám t∆∞∆°ng t√°c',
    museum: 'B·∫£o t√†ng Khoa h·ªçc T·ª± nhi√™n',
    location: 'Tokyo, Nh·∫≠t B·∫£n',
    date: '2024-02-28',
    time: '13:00 - 16:00',
    type: 'hybrid',
    category: 'Gia ƒë√¨nh',
    price: '50,000ƒë',
    capacity: { current: 200, max: 250 },
    rating: 4.6,
    image: 'bg-gradient-to-br from-cyan-500 to-blue-600',
    speaker: 'Dr. Yuki Tanaka',
    highlights: ['Th√≠ nghi·ªám t∆∞∆°ng t√°c', 'Qu√† t·∫∑ng', 'Ho·∫°t ƒë·ªông nh√≥m'],
    featured: false,
  },
];

const getEventTypeIcon = (type: string) => {
  switch (type) {
    case 'online':
      return Monitor;
    case 'offline':
      return MapPin;
    case 'hybrid':
      return Wifi;
    case 'vr':
      return Headset;
    default:
      return Calendar;
  }
};

const getEventTypeColor = (type: string) => {
  switch (type) {
    case 'online':
      return 'bg-blue-100 text-blue-700 dark:bg-blue-900 dark:text-blue-300';
    case 'offline':
      return 'bg-green-100 text-green-700 dark:bg-green-900 dark:text-green-300';
    case 'hybrid':
      return 'bg-purple-100 text-purple-700 dark:bg-purple-900 dark:text-purple-300';
    case 'vr':
      return 'bg-orange-100 text-orange-700 dark:bg-orange-900 dark:text-orange-300';
    default:
      return 'bg-gray-100 text-gray-700 dark:bg-gray-900 dark:text-gray-300';
  }
};

const formatDate = (dateString: string) => {
  const date = new Date(dateString);
  return date.toLocaleDateString('vi-VN', { day: '2-digit', month: '2-digit', year: 'numeric' });
};

export function UpcomingEvents() {
  const { ref, visibleItems } = useStaggeredAnimation(events.length, 150);

  return (
    <section className="py-16 bg-gradient-to-b from-muted/30 to-background">
      <div className="container mx-auto max-w-screen-2xl px-4">
        {/* Section Header */}
        <div className="text-center mb-12">
          <Badge variant="secondary" className="mb-4 text-lg font-medium rounded-xl p-2">
            üìÖ S·ª± ki·ªán s·∫Øp di·ªÖn ra
          </Badge>
          <h2 className="text-3xl font-bold tracking-tight mb-4 lg:text-4xl">
            Tham gia{' '}
            <span className="bg-gradient-to-r from-primary via-purple-600 to-secondary bg-clip-text text-transparent">
              s·ª± ki·ªán h·∫•p d·∫´n
            </span>
          </h2>
          <p className="text-lg text-muted-foreground max-w-2xl mx-auto">
            ƒêƒÉng k√Ω tham gia c√°c tri·ªÉn l√£m, workshop v√† s·ª± ki·ªán vƒÉn h√≥a ƒë·ªôc ƒë√°o t·ª´ kh·∫Øp n∆°i tr√™n th·∫ø gi·ªõi.
          </p>
        </div>

        {/* Events Grid */}
        <div ref={ref} className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-12">
          {events.map((event, index) => {
            const TypeIcon = getEventTypeIcon(event.type);
            const isVisible = visibleItems.includes(index);
            const capacityPercentage = (event.capacity.current / event.capacity.max) * 100;

            return (
              <Card
                key={event.id}
                className={`group cursor-pointer hover:shadow-xl transition-all duration-500 ${
                  isVisible ? 'animate-slide-up opacity-100' : 'opacity-0'
                } ${event.featured ? 'ring-2 ring-primary/20' : ''}`}
              >
                <CardContent className="p-0">
                  {/* Event Image/Preview */}
                  <div className={`relative h-48 ${event.image} overflow-hidden`}>
                    {/* Overlay */}
                    <div className="absolute inset-0 bg-black/20 group-hover:bg-black/10 transition-colors duration-300" />

                    {/* Featured Badge */}
                    {event.featured && (
                      <div className="absolute top-4 left-4">
                        <Badge className="bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200">
                          <Star className="mr-1 h-3 w-3 fill-current" />
                          N·ªïi b·∫≠t
                        </Badge>
                      </div>
                    )}

                    {/* Event Type Badge */}
                    <div className="absolute top-4 right-4">
                      <Badge className={getEventTypeColor(event.type)}>
                        <TypeIcon className="mr-1 h-3 w-3" />
                        {event.type === 'online' && 'Tr·ª±c tuy·∫øn'}
                        {event.type === 'offline' && 'T·∫°i ch·ªó'}
                        {event.type === 'hybrid' && 'K·∫øt h·ª£p'}
                        {event.type === 'vr' && 'VR'}
                      </Badge>
                    </div>

                    {/* Date Badge */}
                    <div className="absolute bottom-4 left-4">
                      <Badge
                        variant="secondary"
                        className="bg-white/90 text-gray-900 dark:bg-gray-900/90 dark:text-gray-100"
                      >
                        <Calendar className="mr-1 h-3 w-3" />
                        {formatDate(event.date)}
                      </Badge>
                    </div>

                    {/* Quick Action Button */}
                    <div className="absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                      <Button
                        size="sm"
                        className="rounded-full bg-white/90 text-gray-900 hover:bg-white hover:scale-110 transition-all duration-300"
                      >
                        <Eye className="h-4 w-4" />
                      </Button>
                    </div>
                  </div>

                  {/* Event Info */}
                  <div className="p-6 space-y-4">
                    {/* Category */}
                    <Badge variant="outline" className="text-xs">
                      {event.category}
                    </Badge>

                    <div>
                      <h3 className="font-semibold text-lg mb-2 group-hover:text-primary transition-colors line-clamp-2">
                        {event.title}
                      </h3>
                      <p className="text-sm text-muted-foreground line-clamp-2 mb-3">{event.description}</p>
                    </div>

                    {/* Event Details */}
                    <div className="space-y-2 text-sm text-muted-foreground">
                      <div className="flex items-center">
                        <MapPin className="mr-2 h-3 w-3" />
                        <span>{event.museum}</span>
                      </div>
                      <div className="flex items-center">
                        <Clock className="mr-2 h-3 w-3" />
                        <span>{event.time}</span>
                      </div>
                      <div className="flex items-center">
                        <Users className="mr-2 h-3 w-3" />
                        <span>Di·ªÖn gi·∫£: {event.speaker}</span>
                      </div>
                    </div>

                    {/* Capacity Progress */}
                    <div className="space-y-2">
                      <div className="flex justify-between text-sm">
                        <span className="text-muted-foreground">ƒê√£ ƒëƒÉng k√Ω</span>
                        <span className="font-medium">
                          {event.capacity.current}/{event.capacity.max}
                        </span>
                      </div>
                      <Progress value={capacityPercentage} className="h-2" />
                      {capacityPercentage > 80 && (
                        <p className="text-xs text-orange-600 dark:text-orange-400">
                          <Zap className="inline h-3 w-3 mr-1" />
                          S·∫Øp h·∫øt ch·ªó!
                        </p>
                      )}
                    </div>

                    {/* Highlights */}
                    <div className="flex flex-wrap gap-1">
                      {event.highlights.map((highlight, idx) => (
                        <Badge key={idx} variant="secondary" className="text-xs">
                          {highlight}
                        </Badge>
                      ))}
                    </div>

                    {/* Price and Rating */}
                    <div className="flex items-center justify-between pt-2 border-t">
                      <div className="flex items-center gap-2">
                        <span className="text-lg font-semibold text-primary">{event.price}</span>
                        <div className="flex items-center text-yellow-500">
                          <Star className="h-3 w-3 fill-current" />
                          <span className="text-xs ml-1">{event.rating}</span>
                        </div>
                      </div>
                      <Button
                        size="sm"
                        className="group-hover:bg-primary group-hover:text-primary-foreground transition-colors"
                      >
                        ƒêƒÉng k√Ω
                        <ArrowRight className="ml-1 h-3 w-3 group-hover:translate-x-1 transition-transform" />
                      </Button>
                    </div>
                  </div>
                </CardContent>
              </Card>
            );
          })}
        </div>

        {/* View All CTA */}
        <div className="text-center">
          <Button size="lg" variant="outline" className="group">
            Xem t·∫•t c·∫£ s·ª± ki·ªán
            <ArrowRight className="ml-2 h-4 w-4 group-hover:translate-x-1 transition-transform" />
          </Button>
        </div>
      </div>
    </section>
  );
}
